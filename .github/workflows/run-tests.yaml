name: tests
on: push
jobs:
  run_tests:
    runs-on: ubuntu-latest
    env:
      AZURE_TENANT_ID: ${{ secrets.TEST_AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.TEST_AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.TEST_AZURE_CLIENT_SECRET }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Prepare certificate and properties files
        run: |
          echo "prepare step"
          pwd
          ls
          mkdir -p $HOME/.azure
          mkdir -p $HOME/.oci

          # Generate oci config
          echo -e "${{ secrets.TEST_OCI_API_KEY }}" > ~/.oci/oci-api-key.pem
          echo -e "${{ secrets.TEST_OCI_CONGIF_PROFILE }}" > ~/.oci/config

          # Generate ojdbc-provider-oci/test.properties
          echo -e "OCI_CONFIG_FILE=${{ secrets.TEST_OCI_CONFIG_FILE }}\n
          OCI_CONFIG_PROFILE=OJDBC-PLUGIN-TEST\n
          OCI_CLOUD_SHELL=false\n
          OCI_INSTANCE_PRINCIPAL=false\n
          OCI_RESOURCE_PRINCIPAL=false\n
          OCI_TOKEN_SCOPE=${{ secrets.TEST_OCI_TOKEN_SCOPE }}\n
          OCI_PASSWORD_OCID=${{ secrets.TEST_OCI_PASSWORD_OCID }}\n
          OCI_DATABASE_OCID=${{ secrets.TEST_OCI_DATABASE_OCID }}\n
          OCI_COMPARTMENT_ID=${{ secrets.TEST_OCI_COMPARTMENT_ID }}\n
          OCI_DB_TOOLS_CONNECTION_OCID_KEYSTORE=${{ secrets.TEST_OCI_DB_TOOLS_CONNECTION_OCID_KEYSTORE }}\n
          OCI_DB_TOOLS_CONNECTION_OCID_PKCS12=${{ secrets.TEST_OCI_DB_TOOLS_CONNECTION_OCID_PKCS12 }}\n
          OCI_DB_TOOLS_CONNECTION_OCID_SSO=${{ secrets.TEST_OCI_DB_TOOLS_CONNECTION_OCID_SSO }}\n
          OCI_OBJECT_STORAGE_URL=${{ secrets.TEST_OCI_OBJECT_STORAGE_URL }}\n
          " >> ojdbc-provider-oci/test.properties
          
          if [ -d $HOME/.oci ]; then
            echo "Directory $HOME/.oci exists"
          else
            echo "Directory $HOME/.oci does not exists"
          fi
          
          if [[ -f "ojdbc-provider-oci/test.properties" ]]; then
            echo "File oci/test.properties exists."
          else
            echo "File oci/test.properties does not exist."
          fi
          
      - name: Run tests with Maven
        run: |
          echo "run tests step"
          mvn -B test --file pom.xml
      - name: Clean up
        run: |
          rm ~/.oci/oci-api-key.pem
          rm ~/.oci/config
           
          #rm $HOME/.azure/ojdbc-plugin-test-app.pem
          #rm ojdbc-provider-azure/ojdbc-provider-test-app.pfx

          #rm ojdbc-provider-azure/test.properties

